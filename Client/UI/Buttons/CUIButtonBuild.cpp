/* 
 * File:   CUIButtonBuild.cpp
 * Author: karsten
 * 
 * Created on 20. september 2011, 10:36
 */

#include "CUIButtonBuild.h"

CUIButtonBuild::CUIButtonBuild(CUIBaseFrame* parrent,CSubSystemFac* fac,CItemType* item):
CUIButton(parrent,0,0,40,40){
	this->_fac = fac;
	this->_item = item;
}
void CUIButtonBuild::Move(SDL_Event event, int32_t x, int32_t y){
	hoverFrame = this;
}
void CUIButtonBuild::Click(SDL_Event event, int32_t x, int32_t y){
	//if (x >= this->x && x <= this->x+this->wight && y >= this->y && y <= this->y+this->hight){
		cerr<<"click button build"<<endl;
		if (this->_fac){
			if(this->_item){
				if (SDL_GetModState() & KMOD_SHIFT)
					playerObj->ServerRequestBuild(this->_fac,this->_item,5);
				else if (SDL_GetModState() & KMOD_CTRL)
					playerObj->ServerRequestBuild(this->_fac,this->_item,10);
				else
					playerObj->ServerRequestBuild(this->_fac,this->_item,1);
			}else
				cerr<<"WARNING CUIButtonBuild::Click invalid type"<<endl;
		}else{
			cerr<<"WARNING CUIButtonBuild::Click invalid fac"<<endl;
		}
	//}
}


void CUIButtonBuild::Draw(int32_t x, int32_t y){
	int32_t uvx1;
	int32_t uvy1;
	uint32_t sheetsize;
	sheetsize = 1024;
	if (this->_item){
		switch (this->_item->getPicID()){
		//*****************************************
		//file generated by python spritesheet
		#include "../../Textures/Items/itemcords.txt"
		//**************************************************
			default:{
			glBindTexture( GL_TEXTURE_2D, textures[Textures::ItemSheet]);
			uvx1 = 0;
			uvy1 = 0;
			cerr<<"Warning itemsheed tex"<<endl;
			break;
			}
		}
		glLoadIdentity();
		glTranslated((GLfloat)(_x+x),(GLfloat)(_y+y),0);

		glBegin( GL_QUADS );
		//Bottom-left vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1), (((double)1)/sheetsize)*(uvy1) );
		glVertex3f(0, 0, 0.0f);

		//Bottom-right vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1+_wight), (((double)1)/sheetsize)*(uvy1) );
		glVertex3f(_wight, 0, 0.f);

		//Top-right vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1+_wight), (((double)1)/sheetsize)*(uvy1+_hight) );
		glVertex3f(_wight, _hight, 0.f);

		//Top-left vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1), (((double)1)/sheetsize)*(uvy1+_hight) );
		glVertex3f(0, _hight, 0.f);
		glEnd();
	}
}


CUIButtonBuild::~CUIButtonBuild() {
}

