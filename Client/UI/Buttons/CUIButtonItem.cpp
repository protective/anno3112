/* 
 * File:   CUIButtonItem.cpp
 * Author: karsten
 * 
 * Created on 20. september 2011, 20:57
 */

#include <sstream>

#include "CUIButtonItem.h"
#include "../../spaceobjects/subsystems/CSlotNode.h"
CUIButtonItem::CUIButtonItem(CUIBaseFrame* parrent,uint32_t x, uint32_t y, uint32_t wight, uint32_t hight,CCargoBay* cargobay, CItemType* item, uint32_t quan):
CUIButton(parrent,x,y,wight,hight){
	this->_item = item;
	this->_quan = quan;
	this->_cargobay = cargobay;
	this->_slot = NULL;
}

CUIButtonItem::CUIButtonItem(CUIBaseFrame* parrent,uint32_t x, uint32_t y, uint32_t wight, uint32_t hight, CSlotNode* slot, uint32_t quan):
CUIButton(parrent,x,y,wight,hight){
	if(slot->getSS() && slot->getSS()->getItemType())
		this->_item = slot->getSS()->getItemType();
	else
		this->_item = NULL;
	this->_slot = slot;
	this->_quan = quan;
	this->_cargobay = NULL;
}


void CUIButtonItem::Click(SDL_Event event, int32_t x, int32_t y){
		cerr<<"click CUIButtonItem"<<endl;
		//selectedFrame = this;
		//this->drag();
		//this->_toBeDrawnFront = true;
		uint32_t i = 1;
		if (SDL_GetModState() & KMOD_SHIFT)
			i = this->_cargobay->GetReturn(_item,5);
		if (SDL_GetModState() & KMOD_CTRL){
			i = this->_cargobay->GetReturn(_item,100000);
		}
		
		CUIButtonItem* temp = new CUIButtonItem(this->_parrent , 0,0,this->_wight,this->_hight,this->_cargobay,this->_item,i);
		selectedFrame = temp;
		temp->drag();
		temp->SetX(event.button.x-30);
		temp->SetY(event.button.y-30);
		temp->setDrawFront(true);

		this->_parrent->add(*temp);
}

void CUIButtonItem::drag(){
	this->_oldX = this->_x;
	this->_oldY  =this->_y;
	
}

void CUIButtonItem::drop(CUIBaseFrame* dropedFrame){
	this->_x = this->_oldX;
	this->_y = this->_oldY;
	cerr<<"reset"<<endl;
	dropedFrame->OnDrop(this);
	this->setCanberemoved(true);

}


void CUIButtonItem::Draw(){

	//Drawbox(_x+_parrent->getX(),_y+_parrent->getY(),_wight,_hight,1,0,1,1);
		int32_t uvx1;
		int32_t uvy1;
		uint32_t sheetsize;
		sheetsize = 1024;

		switch (this->_item->getPicID()){

		//*****************************************
		//file generated by python spritesheet
		#include "../../Textures/Items/itemcords.txt"

		//**************************************************
			default:{
			glBindTexture( GL_TEXTURE_2D, textures[Textures::ItemSheet]);

			uvx1 = 0;
			uvy1 = 0;
			cerr<<"Warning itemsheed tex"<<endl;
			break;
			}
		}

		glLoadIdentity();
		if(selectedFrame != this)
			glTranslated((GLfloat)(_x+_parrent->getX()),(GLfloat)(_y+_parrent->getY()),0);
		else
			glTranslated((GLfloat)(_x),(GLfloat)(_y),0);

		glBegin( GL_QUADS );
		//Bottom-left vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1), (((double)1)/sheetsize)*(uvy1) );
		glVertex3f(0, 0, 0.0f);

		//Bottom-right vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1+_wight), (((double)1)/sheetsize)*(uvy1) );
		glVertex3f(_wight, 0, 0.f);

		//Top-right vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1+_wight), (((double)1)/sheetsize)*(uvy1+_hight) );
		glVertex3f(_wight, _hight, 0.f);

		//Top-left vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1), (((double)1)/sheetsize)*(uvy1+_hight) );
		glVertex3f(0, _hight, 0.f);
		glEnd();

	glLoadIdentity();
	font.FaceSize(16);
    glColor3f(1.0, 1.0, 1.0);
	uint32_t dit = 0;
	if(this->_quan >= 10)
		dit = 1;
	if(this->_quan >= 100)
		dit = 2;
	if(this->_quan >= 1000)
		dit = 3	;
	if(this->_quan >= 10000)
		dit = 4	;
	if(selectedFrame != this)
		glRasterPos2f(_x+_parrent->getX()+_wight-(11+(dit*8)), _y+_parrent->getY()+_hight-2);
	else
		glRasterPos2f(_x+_wight-15, _y+_hight-2);

	stringstream s;
	s<<this->_quan;
	font.Render(s.str().c_str());
}

void CUIButtonItem::Move(SDL_Event event, int32_t x, int32_t y){
	hoverFrame = this;
}


CUIButtonItem::~CUIButtonItem() {
}

